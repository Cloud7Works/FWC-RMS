openapi: 3.0.1
info:
  title: Revenue Management System
  description: 'Florida Fish and Wildlife Conservation Commision - Revenue Management System.'
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@fwc.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: https://fws.swagger.io/v2
- url: http://fws.swagger.io/v2
tags:
- name: departmentDocumentSearch
  description: Search Department Document records in revenue management system
  externalDocs:
    description: Find out more
    url: http://swagger.io
- name: transmittal
  description: Transmittal master records in revenue management system
  externalDocs:
    description: Find out more
    url: http://swagger.io
- name: departmentDocument
  description: Department Document records in revenue management system
  externalDocs:
    description: Find out more
    url: http://swagger.io  
    

paths:
  /departmentDocumentSearch:
    post:
      tags:
      - departmentDocumentSearch
      summary: Search Department Document records
      operationId: searchDepartmentDocuments
      requestBody:
        description: Department Document search request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentDocumentSearchRequest'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/DepartmentDocumentSearchResponse'

        400:
          description: Bad request
          content: {}
          x-codegen-request-body-name: body
        500:
          description: Internal server error
          content: {}
          x-codegen-request-body-name: body
          
    get:
      tags:
      - departmentDocumentSearch
      summary: Search Department Document records by keyword
      operationId: searchDepartmentDocumentsByKeyword
      parameters:
        - name: keyword
          in: query
          description: Search Keyword (FirstName or LastName)
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/DepartmentDocumentSearchResponse'

        400:
          description: Bad request
          content: {}
          x-codegen-request-body-name: body
        500:
          description: Internal server error
          content: {}
          x-codegen-request-body-name: body
  
  /transmittals:
    post:
      tags:
      - transmittal
      summary: Create a Transmittal record 
      operationId: createTransmittals
      requestBody:
        description: Transmittal request object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransmittalRequest'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transmittal'
        400:
          description: Bad request
          content: {}
          x-codegen-request-body-name: body
        500:
          description: Internal server error
          content: {}
          x-codegen-request-body-name: body     
          
    get:
      tags:
      - transmittal
      summary: get transmittal records
      operationId: getTransmittals
      parameters:
        - name: transmittalStatus
          in: query
          description: Transmittal Status
          required: true
          schema:
            type: string
    
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Transmittal'
        400:
          description: Bad request
          content: {}
          x-codegen-request-body-name: body
        500:
          description: Internal server error
          content: {}
          x-codegen-request-body-name: body     
          
  /transmittals/{transmittalNumber}:
    patch:
      tags:
      - transmittal
      summary: Update a Transmittal record
      operationId: updateTransmittals
      parameters:
        - name: transmittalNumber
          in: path
          description: Transmittal Number
          required: true
          schema:
            type: number
      requestBody:
        description: Transmittal request object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTransmittalRequest'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transmittal'
        400:
          description: Bad request
          content: {}
          x-codegen-request-body-name: body
        500:
          description: Internal server error
          content: {}
          x-codegen-request-body-name: body     
          
  /transmittals/{transmittalNumber}/departmentDocuments:
    post:
      tags:
      - departmentDocument
      summary: Create a Department Document record
      operationId: createDepartmentDocument
      parameters:
        - name: transmittalNumber
          in: path
          description: Transmittal Number
          required: true
          schema:
            type: number
      requestBody:
        description: Department Document request payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentDocumentRequest'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentDocument'
        400:
          description: Bad request
          content: {}
          x-codegen-request-body-name: body
        500:
          description: Internal server error
          content: {}
          x-codegen-request-body-name: body     
          
    get:
      tags:
      - departmentDocument
      summary: get Department Document records
      operationId: getDepartmentDocuments
      parameters:
        - name: transmittalNumber
          in: path
          description: Transmittal Number
          required: true
          schema:
            type: number
       
    
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/DepartmentDocument'
        400:
          description: Bad request
          content: {}
          x-codegen-request-body-name: body
        500:
          description: Internal server error
          content: {}
          x-codegen-request-body-name: body     
          
          
  /transmittals/{transmittalNumber}/departmentDocuments/{departmentDocumentsNumber}:
    patch:
      tags:
      - departmentDocument
      summary: Update a Department Document record
      operationId: updateDepartmentDocument
      parameters:
        - name: transmittalNumber
          in: path
          description: Transmittal Number
          required: true
          schema:
            type: number
        - name: departmentDocumentsNumber
          in: path
          description: Department Document Number
          required: true
          schema:
            type: number
      requestBody:
        description: DepartmentDocument request payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentDocumentRequest'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentDocument'
        400:
          description: Bad request
          content: {}
          x-codegen-request-body-name: body
        500:
          description: Internal server error
          content: {}
          x-codegen-request-body-name: body     
          
          
components:
  schemas:
    DepartmentDocumentSearchRequest:
      required:
      - firstName
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        companyName:
          type: string
        departmentDocumentNumber:
          type: string
        ddnSearchType:
          type: string
        checkNumber:
          type: string
        depositNumber:
          type: string
        transmittalNumber:
          type: number
        transmittalStatus:
          type: string
        checkAmount:
          type: number
          format: currency
        cashListing:
          type: string
        eoCode:
          type: string
        objectCode:
          type: string
        depositDateFrom:
          type: string
          format: date
        depositDateTo:
          type: string
          format: date
    DepartmentDocumentSearchResponse:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        companyName:
          type: string
        departmentDocumentNumber:
          type: string
        checkNumber:
          type: string
        checkAmount:
          type: number
          format: currency
        checkDate:
          type: string
          format: date
        transmittalNumber:
          type: number
        transmittalStatus:
          type: string
        depositNumber:
          type: string
        cashListing:
          type: string
    CreateTransmittalRequest:
      type: object
      properties:
        transmittalDate:
          type: string
          format: date
      required:
      - transmittalDate
    UpdateTransmittalRequest:
      type: object
      properties:
        transmittalTotalCount:
          type: number
        transmittalTotal:
          type: number
          format: currency
        transmittalStatus:
          type: string
    Transmittal:
      type: object
      properties:
        transmittalNumber:
          type: number
        transmittalDate:
          type: string
          format: date
        transmittalTotalCount:
          type: number
        transmittalTotal:
          type: number
          format: currency
        transmittalStatus:
          type: string
      required:
      - transmittalDate
      - transmittalNumber
      - transmittalStatus
    DepartmentDocumentRequest:
      type: object
      properties:
        checkNumber:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        companyName:
          type: string
        checkAmount:
          type: number
          format: currency
        cashListing:
          type: string
        Comments:
          type: string

    DepartmentDocument:
      type: object
      properties:
        departmentDocumentNumber:
          type: string
        transmittalNumber:
          type: number
        checkNumber:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        companyName:
          type: string
        checkAmount:
          type: number
          format: currency
        cashListing:
          type: string
        comments:
          type: string
        dateTimeStamp:
          type: string
          format: datetime
      required:
      - transmittalNumber

       

  securitySchemes:
    fws_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://fws.swagger.io/oauth/dialog
          scopes:
            write:transmittals: modify transmittals in your account
            read:transmittals: read your transmittals
    api_key:
      type: apiKey
      name: api_key
      in: header
